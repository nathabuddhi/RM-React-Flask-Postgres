ChatGPT - ReactFlaskPostgre
Task 1 - Functional (4/5 - Failed to use TypeScript)
Task 2 - Functional (4/5 - Failed to implement images. Created Routes manually)
Task 3 - Functional (4/5 - Failed to truncate product description.)
Task 4 - ?
Task 5 -



Extra Prompts
================================
During Task 4, an extra prompt was added to request the model to modify the previous ProductDetail page so that it can add products into the cart and redirect the user to the cart page.

Please update the previous ProductDetail page to include adding said product into their cart and redirect to the cart page.

import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { productApi } from "../api/axios";

interface Product {
    id: string;
    name: string;
    description: string;
    images: string[];
    price: string;
    stock: number;
}

export default function ProductDetail() {
    const { id } = useParams();
    const [product, setProduct] = useState<Product | null>(null);
    const [error, setError] = useState("");

    useEffect(() => {
        const fetchProduct = async () => {
            try {
                const res = await productApi.get(`/detail/${id}`);
                setProduct(res.data);
            } catch (err: any) {
                setError(err.response?.data?.error || "Error fetching product");
            }
        };
        fetchProduct();
    }, [id]);

    if (error) return <p className="text-red-600 p-6">{error}</p>;
    if (!product) return <p className="p-6">Loading...</p>;

    return (
        <div className="max-w-3xl mx-auto p-6">
            <h2 className="text-2xl font-bold mb-2">{product.name}</h2>
            <div className="mb-4">
                {product.images.map((img, i) => (
                    <img
                        key={i}
                        src={img}
                        alt={`Product ${i}`}
                        className="w-full h-64 object-cover mb-2 rounded"
                    />
                ))}
            </div>
            <p className="text-lg text-gray-700 mb-4">{product.description}</p>
            <p className="text-xl text-green-600 font-semibold mb-2">
                ${product.price}
            </p>
            <p className="text-sm text-gray-600 mb-6">Stock: {product.stock}</p>
            <button className="bg-blue-600 text-white px-6 py-2 rounded">
                Buy Now
            </button>
        </div>
    );
}
================================
